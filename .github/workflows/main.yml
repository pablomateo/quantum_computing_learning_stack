# This is a basic workflow to help you get started with Actions
# Based on: https://github.com/racklet/render-drawio-action

name: Render Quantum Learning Stack

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ github_actions_test ]

jobs:
  render_drawio:
    runs-on: ubuntu-latest
    name: Render draw.io files
    steps:      
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run script
      run: echo Building Quantum Stack!
    - name: Render files
      uses: docker://ghcr.io/racklet/render-drawio-action:v1
      id: render
      with: 
        format: png,pdf,svg
        sub-dirs: '.'
        skip-dirs: '.git'
        # files:  "/images/quantum_learning_stack.png:quantum_roadmap.drawio,images/quantum_learning_stack.svg:quantum_roadmap.drawio"
        log-level: 'debug'
    - name: List the rendered files
      run: 'ls -l ${{ steps.render.outputs.rendered-files }}'
    - uses: EndBug/add-and-commit@v7
      with:
        # This "special" author name and email will show up as the GH Actions user/bot in the UI
        author_name: pmf-github-action
        author_email: 41898282+github-actions[bot]@users.noreply.github.com
        message: 'Automatically rendered .drawio files for quantum learning stack'
        add: "${{ steps.render.outputs.rendered-files }}"
      if: "${{ steps.render.outputs.rendered-files != ''}}"

  drawio-export:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Export drawio files to asciidoctor and png files
        uses: docker://ghcr.io/rlespinasse/drawio-export:v3.x
        with:
          args: --fileext adoc --folder images --transparent --on-changes

      - name: Get author and committer info from HEAD commit
        uses: rlespinasse/git-commit-data-action@v1.x

      - name: Commit changed files
        uses: stefanzweifel/git-auto-commit-action@v4.1.6
        with:
          commit_message: "docs: sync draw.io exported files"
          commit_user_name: "${{ env.GIT_COMMIT_COMMITTER_NAME }}"
          commit_user_email: "${{ env.GIT_COMMIT_COMMITTER_EMAIL }}"
          commit_author: "${{ env.GIT_COMMIT_AUTHOR }}"